name: Build

on:
  push:
  pull_request:

env:
  TOOLCHAIN_URL: https://github.com/sundermann/buildroot-nc4/releases/download/2025.02-03/linux-intel-lgtv-sdk.tar.gz
  TOOLCHAIN_SHA256: 8453e05a2e334cac891f41faa8582e43263c711b491256500d126f442c231749
  TOOLCHAIN_DIR: /opt/arm-lgtv-linux-gnueabi_sdk-buildroot
  TOOLCHAIN_FILE: /opt/arm-lgtv-linux-gnueabi_sdk-buildroot/share/buildroot/toolchainfile.cmake

jobs:
  build-native-component:
    strategy:
      matrix:
        build-type: [Debug, Release]

    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4
        with:
          submodules: recursive
          fetch-depth: 0

      - name: Download and unpack toolchain
        working-directory: /opt
        run: |
          wget -q -O toolchain.tar.gz ${TOOLCHAIN_URL}
          echo "${TOOLCHAIN_SHA256} toolchain.tar.gz"|sha256sum -c -
          tar xf toolchain.tar.gz

      - name: Relocate toolchain
        working-directory: ${{ env.TOOLCHAIN_DIR }}
        run: |
          ./relocate-sdk.sh

      - name: Build ezinject
        working-directory: ${{ github.workspace }}
        run: |
          git clone https://github.com/smx-smx/ezinject
          cd ezinject
          git pull && git checkout 607055c06b037eadc3992008940d99bdc4a14f53
          mkdir build && cd build
          cmake -DEZ_LIBC=glibc -DUSE_FRIDA_GUM=1 -DCMAKE_INSTALL_PREFIX=$TOOLCHAIN_DIR/arm-lgtv-linux-gnueabi/sysroot -DCMAKE_TOOLCHAIN_FILE=$TOOLCHAIN_FILE ..
          make -j$(getconf _NPROCESSORS_ONLN) && make install

      - name: Create Build directory
        run: cmake -E make_directory ${{ github.workspace }}/build

      - name: Build component
        working-directory: ${{ github.workspace }}/build
        shell: bash
        run: cmake -DCMAKE_BUILD_TYPE=${{ matrix.build-type }} -DCMAKE_TOOLCHAIN_FILE=$TOOLCHAIN_FILE .. && make inputhookpp

      - name: Copy ezinject
        run: |
          cp ${{ env.TOOLCHAIN_DIR }}/arm-lgtv-linux-gnueabi/sysroot/bin/ezinject ${{ github.workspace }}/build

      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: hyperion_webos_${{ matrix.build-type }}
          path: |
            ${{ github.workspace }}/build/ezinject
            ${{ github.workspace }}/build/*.so

      - name: Release
        uses: softprops/action-gh-release@v1
        if: ${{ startsWith(github.ref, 'refs/tags/') && matrix.build-type == 'Release' }}
        with:
          files: |
            ${{ github.workspace }}/build/ezinject
            ${{ github.workspace }}/build/*.so